"""Pylons environment configuration"""
import os

import pylons
from pylons.configuration import PylonsConfig
{{if sqlalchemy}}
from sqlalchemy import engine_from_config
{{endif}}

import {{package}}.lib.app_globals as app_globals
import {{package}}.lib.helpers
from {{package}}.config.routing import make_map
{{if sqlalchemy}}
from {{package}}.model import init_model
{{endif}}

def load_environment(global_conf, app_conf):
    """Configure the Pylons environment via the ``pylons.config``
    object
    """
    # Pylons paths
    root = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
    paths = dict(root=root,
                 controllers=os.path.join(root, 'controllers'),
                 static_files=os.path.join(root, 'public'),
                 templates=os.path.join(root, 'templates'))

    # Initialize config with the basic options
    config.init_app(global_conf, app_conf, package='{{package}}', paths=paths)

    config['routes.map'] = make_map(config)
    config['pylons.app_globals'] = app_globals.Globals(config)
    config['pylons.h'] = suitframework.lib.helpers
    
    # Setup cache object as early as possible
    pylons.cache._push_object(config['pylons.app_globals'].cache)

    return config